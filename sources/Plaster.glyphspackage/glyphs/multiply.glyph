{
glyphname = multiply;
kernLeft = KO_multiply;
kernRight = KO_multiply;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(441,93,l),
(769,420,l),
(1097,93,l),
(1233,229,l),
(905,556,l),
(1233,884,l),
(1096,1020,l),
(768,692,l),
(441,1020,l),
(305,884,l),
(632,556,l),
(305,229,l)
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */
5 10 1 4
CALL[ ]	/* CallFunction */
PUSHW[ ]	/* 1 value pushed */
5
SRP0[ ]	/* SetRefPoint0 */
PUSHW[ ]	/* 1 value pushed */
13
MDRP[11100]	/* MoveDirectRelPt */
SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
2
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
2 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
PUSHW[ ]	/* 1 value pushed */
0
RCVT[ ]	/* ReadCVT */
IF[ ]	/* If */
PUSHW[ ]	/* 1 value pushed */
4
MDAP[1]	/* MoveDirectAbsPt */
ELSE[ ]	/* Else */
PUSHW[ ]	/* 2 values pushed */
4 18
MIAP[0]	/* MoveIndirectAbsPt */
EIF[ ]	/* EndIf */
IUP[0]	/* InterpolateUntPts */
IUP[1]	/* InterpolateUntPts */";
};
width = 1538;
}
);
note = multiply;
unicode = 215;
userData = {
KernOnSpecialSpacing = {
L = math;
R = math;
};
};
}
